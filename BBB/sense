#!/usr/bin/env python

# need this for command line arguments and for the path
import sys

# need this to use cat
import os

# need this for SysID's
from itertools import chain

# import sensors
from API.sensors import S

# returns the SysID when given senseID
from API.conversions import senseIDtoSysID

def main(argv):

	try:

		# read in senseID
		senseID = argv[1]

		# check if senseID is valid
		if senseID in senseIDtoSysID:

			# set SysID
			SysID = senseIDtoSysID[senseID]

			# display comments of file
			os.system("cat /tmp/S" + str(SysID))

		# catch error (probably needs work)
		else: print "Invalid sensor name"

	# if no arguments, print all sensors
	except IndexError:

		# leading digit maps to subsystem
		subsystem = {1: "Liquid tanks and plumbing", 2: "Growth medium", 3: "Internal atmosphere", 4: "External environment"}

		# chain SysID's together
		SysIDs = chain(range(101, 113), range(201, 204), range(205, 207), range(208, 212), range(301, 307), range(401, 404))

		for SysID in SysIDs:

			# if it's the first item of a new subsystem
			if SysID % 100 == 1: 
				
				# chop off last two digits to get system number
				system_number = SysID / 100
				
				# display subsystem
				print
				print subsystem[system_number]
				print

			# attempt to read the sensor
			try:

				reading = S[SysID].read()

				print "\t", S[SysID].senseID, "reads", reading

			# need to fix these
			except IOError:

				print "\t", S[SysID].senseID, "is broken."

			# these occure because more than one value is returned in comma separated format
			except ValueError:

				print "\t", S[SysID].senseID, "should be RHT or flow meter."

		print

if __name__ == "__main__": main(sys.argv)

