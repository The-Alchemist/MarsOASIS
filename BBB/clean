#!/usr/bin/env python

# need this to wait
import time

# need this for REST API
from API.REST import REST

# need this for conversions
from API.conversions import senseIDtoSysID

# need this for sorted dictionary
import collections

# set up REST backend 
firebase = REST("https://cumarsoasis.firebaseio.com/")

# initialize sensors as not awake
awake = {'EC1': bool(), 'pH1': bool(), 'temp1': bool(), 'temp2': bool(), 'temp3': bool(), 'temp4': bool(), 'CO2': bool(), 'TP1': bool(), 'TP2': bool()}

# do this indefinitely
while True:

	# wait thirty seconds
	time.sleep(30)

	# for each temperature sensor
	for senseID in awake:

		# set SysID
		SysID = senseIDtoSysID[senseID]

		# set historical table
		table = "sensors/historical/S" + str(SysID) + ".json"

		# get data
		data = firebase.GET(table)

		# convert keys to integers
		data = {int(k): v for k, v in data.items() if v >= 0}

		# sort data by key
		data = collections.OrderedDict(sorted(data.items()))

		# split into epochs and readings
		epochs   = data.keys()
		readings = data.values()

		# record latest time
		latest_time = epochs[-1]

		# set cutoff point at a minute before the latest time
		cutoff = latest_time-60

		# initialize cleaned data
		cleaned = dict()

		# for each time
		for epoch in epochs:

			# only include entries in the last hour
			if epoch > cutoff: cleaned[epoch] = data[epoch]

		# set minute table
		table = "sensors/minute/S" + str(SysID) + ".json"

		# post data
		firebase.PUT(cleaned, table)
