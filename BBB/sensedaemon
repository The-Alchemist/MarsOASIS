#!/usr/bin/env python

# need this for command line arguments
import sys

# need this for epoch
import time

# need this to post to database
from API.REST import REST

# need this to know which class to import
from API.conversions import sensor_type, senseIDtoSysID
	
# set up firebase databases
softwaredev = REST("https://cumarsoasis.firebaseio.com/")
independent = REST("https://marsoasis.firebaseio.com/")

def main(argv):

	# get SysID
	SysID = senseIDtoSysID[argv[1]]

	# choose subsystem based on leading digit
	subsystem = str()

	if   SysID / 100 == 1: subsystem = "liquid_tanks_and_plumbing"
	elif SysID / 100 == 2: subsystem = "growth_medium"
	elif SysID / 100 == 3: subsystem = "internal_atmosphere"
	elif SysID / 100 == 4: subsystem = "external_environment"

	# get library to import
	library = sensor_type[SysID]

	# set sensor by sensor type
	if library == "electrical conductivity": 
		
		from API.I2C import electrical_conductivity

		if   SysID == 101: sensor = electrical_conductivity(0x64)
		elif SysID == 205: sensor = electrical_conductivity(0x66)

	elif library == "pH":

		from API.I2C import pH

		if   SysID == 102: sensor = pH(0x65)
		elif SysID == 206: sensor = pH(0x63)

	elif library == "liquid temperature" or library == "soil temperature":

		from API.one_wire import temperature

		if   SysID == 103: sensor = temperature("28-00000673a8a7")
		elif SysID == 201: sensor = temperature("28-0000065f27cc")
		elif SysID == 202: sensor = temperature("28-0000065eb57a")
		elif SysID == 203: sensor = temperature("28-000006747f7f")

	elif library == "dissolved oxygen":

		from API.I2C import dissolved_oxygen

		if SysID == 104: sensor = dissolved_oxygen(0x61)

	elif library == "liquid level":

		from API.ADC import liquid_level

		if   SysID == 105: sensor = liquid_level(0x80)
		elif SysID == 106: sensor = liquid_level(0xA0)
		elif SysID == 107: sensor = liquid_level(0xC0)
		elif SysID == 108: sensor = liquid_level(0xE0)
		elif SysID == 109: sensor = liquid_level(0xD0)
		elif SysID == 112: sensor = liquid_level(0xF0)

	elif library == "flow meter":

		from API.UART import flow_meter

		if   SysID == 110: sensor = flow_meter(1)
		elif SysID == 111: sensor = flow_meter(4)

	elif library == "moisture":

		from API.ADC import moisture

		if   SysID == 208: sensor = moisture(0x80)
		elif SysID == 209: sensor = moisture(0xA0)
		elif SysID == 210: sensor = moisture(0xC0)
		elif SysID == 211: sensor = moisture(0xE0)

	elif library == "relative humidity and air temperature":

		from API.one_wire import relative_humidity_and_air_temperature

		if   SysID == 301: sensor = relative_humidity_and_air_temperature("P8_8")
		elif SysID == 302: sensor = relative_humidity_and_air_temperature("P8_9")
		elif SysID == 401: sensor = relative_humidity_and_air_temperature("P8_10")

	elif library == "total pressure":

		from API.I2C import total_pressure

		if   SysID == 303: sensor = total_pressure(2)
		elif SysID == 402: sensor = total_pressure(1)

	elif library == "oxygen":

		from API.ADC import oxygen

		if SysID == 304: sensor = oxygen()

	elif library == "carbon dioxide":

		from API.UART import carbon_dioxide

		if SysID == 305: sensor = carbon_dioxide(5)

	elif library == "photosynthetically active radiation":

		from API.ADC import photosynthetically_active_radiation

		if   SysID == 306: sensor = photosynthetically_active_radiation(0xF0)
		elif SysID == 403: sensor = photosynthetically_active_radiation(0xD0)

	# do this indefinitely
	while True:
	   
		# take reading
		reading = sensor.read()

		# write to temporary file for API
		with open("/tmp/S" + str(SysID), 'w') as sense: sense.write(str(reading)+'\n')

		# take time stamp
		time_stamp = int(time.time())

		# set up database
		entry = {time_stamp: reading}

		# PATCH entry
		result = softwaredev.PATCH(entry, "data/sensors/" + subsystem + "/S" + str(SysID) + ".json")

if __name__ == "__main__": main(sys.argv)
