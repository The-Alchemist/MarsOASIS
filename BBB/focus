#!/usr/bin/env python

# need this to call wake and check errorlogs
import os

# need this to monitor processes
import psutil

# do this indefinitely
while True:

	# initialize sensors as not awake
	awake = {'EC1': bool(), 'pH1': bool(), 'temp1': bool(), 'temp2': bool(), 'temp3': bool(), 'temp4': bool(), 'CO2': bool(), 'TP1': bool(), 'TP2': bool(), 'O2': bool()}

	# for each pid
	for pid in psutil.pids(): 

		try: 

			# declare process
			process = psutil.Process(pid)

			# for each sensor
			for sensor in awake:
			
				# check if it's awake
				if sensor in process.cmdline(): awake[sensor] = True

		# catch Zombies
		except psutil.ZombieProcess: continue

		# catch processes that have died
		except psutil.NoSuchProcess: continue

		# catch processes where access is denied
		except psutil.AccessDenied: continue

	# for each sensor
	for sensor in awake: 

		# if the sensor isn't awake, wake it
		if not awake[sensor]: os.system("wake " + sensor)

	# keep the right time
	os.system("ntpdate -b -s -u pool.ntp.org")

	# update the status
	os.system("update_status")
